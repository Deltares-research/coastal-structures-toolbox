import pytest

import deltares_coastal_structures_toolbox.functions.hydraulic.wave_transmission.dangremond1996 as dangremond1996


@pytest.mark.parametrize(
    ("Hsi, Tpi, h, Rc, B, cot_alpha, Kt_expected"),
    (
        ([2.500, 11.000, 8.400, -0.800, 10.000, 1.333, 0.528]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 1.333, 0.492]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 1.333, 0.548]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 1.333, 0.503]),
        ([2.500, 11.000, 8.400, -0.800, 10.000, 2.000, 0.497]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 2.000, 0.440]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 2.000, 0.503]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 2.000, 0.439]),
        ([2.500, 11.000, 8.400, -0.800, 10.000, 2.000, 0.497]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 2.000, 0.440]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 2.000, 0.503]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 2.000, 0.439]),
        ([2.500, 11.000, 8.400, -0.800, 20.000, 2.000, 0.426]),
        ([2.500, 7.000, 8.400, -0.800, 20.000, 2.000, 0.380]),
        ([4.000, 12.000, 8.550, -0.950, 20.000, 2.000, 0.424]),
        ([4.000, 8.000, 8.550, -0.950, 20.000, 2.000, 0.372]),
        ([2.500, 11.000, 6.400, -2.400, 5.000, 1.333, 0.800]),
        ([2.500, 7.000, 6.400, -2.400, 5.000, 1.333, 0.800]),
        ([4.000, 12.000, 6.550, -2.550, 5.000, 1.333, 0.800]),
        ([4.000, 8.000, 6.550, -2.550, 5.000, 1.333, 0.761]),
        ([2.500, 11.000, 6.400, -2.400, 5.000, 2.000, 0.800]),
        ([2.500, 7.000, 6.400, -2.400, 5.000, 2.000, 0.771]),
        ([4.000, 12.000, 6.550, -2.550, 5.000, 2.000, 0.761]),
        ([4.000, 8.000, 6.550, -2.550, 5.000, 2.000, 0.681]),
        ([2.500, 11.000, 6.400, -2.400, 5.000, 2.000, 0.800]),
        ([2.500, 7.000, 6.400, -2.400, 5.000, 2.000, 0.771]),
        ([4.000, 12.000, 6.550, -2.550, 5.000, 2.000, 0.761]),
        ([4.000, 8.000, 6.550, -2.550, 5.000, 2.000, 0.681]),
        ([2.500, 11.000, 6.400, -2.400, 5.000, 2.000, 0.800]),
        ([2.500, 7.000, 6.400, -2.400, 5.000, 2.000, 0.771]),
        ([4.000, 12.000, 6.550, -2.550, 5.000, 2.000, 0.761]),
        ([4.000, 8.000, 6.550, -2.550, 5.000, 2.000, 0.681]),
        ([2.500, 11.000, 6.400, 1.600, 10.000, 1.333, 0.144]),
        ([2.500, 7.000, 6.400, 1.600, 10.000, 1.333, 0.108]),
        ([4.000, 12.000, 6.550, 1.450, 10.000, 1.333, 0.308]),
        ([4.000, 8.000, 6.550, 1.450, 10.000, 1.333, 0.263]),
        ([2.500, 11.000, 6.400, 1.600, 10.000, 2.000, 0.113]),
        ([2.500, 7.000, 6.400, 1.600, 10.000, 2.000, 0.075]),
        ([4.000, 12.000, 6.550, 1.450, 10.000, 2.000, 0.263]),
        ([4.000, 8.000, 6.550, 1.450, 10.000, 2.000, 0.199]),
        ([2.500, 11.000, 6.400, 1.600, 10.000, 2.000, 0.113]),
        ([2.500, 7.000, 6.400, 1.600, 10.000, 2.000, 0.075]),
        ([4.000, 12.000, 6.550, 1.450, 10.000, 2.000, 0.263]),
        ([4.000, 8.000, 6.550, 1.450, 10.000, 2.000, 0.199]),
        ([2.500, 11.000, 6.400, 1.600, 10.000, 2.000, 0.113]),
        ([2.500, 7.000, 6.400, 1.600, 10.000, 2.000, 0.075]),
        ([4.000, 12.000, 6.550, 1.450, 10.000, 2.000, 0.263]),
        ([4.000, 8.000, 6.550, 1.450, 10.000, 2.000, 0.199]),
    ),
)
def test_Kt_permeable_backward(Hsi, Tpi, h, Rc, B, cot_alpha, Kt_expected):

    Kt_calculated = dangremond1996.calculate_wave_transmission_Kt_permeable(
        Hsi=Hsi,
        Tpi=Tpi,
        h=h,
        Rc=Rc,
        B=B,
        cot_alpha=cot_alpha,
    )

    assert Kt_calculated == pytest.approx(Kt_expected, abs=1e-3)


@pytest.mark.parametrize(
    ("Hsi, Tpi, h, Rc, B, cot_alpha, Kt_expected"),
    (
        ([2.500, 11.000, 8.400, -0.800, 10.000, 1.333, 0.629]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 1.333, 0.583]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 1.333, 0.661]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 1.333, 0.605]),
        ([2.500, 11.000, 8.400, -0.800, 10.000, 2.000, 0.589]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 2.000, 0.518]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 2.000, 0.605]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 2.000, 0.525]),
        ([2.500, 11.000, 8.400, -0.800, 10.000, 2.000, 0.589]),
        ([2.500, 7.000, 8.400, -0.800, 10.000, 2.000, 0.518]),
        ([4.000, 12.000, 8.550, -0.950, 10.000, 2.000, 0.605]),
        ([4.000, 8.000, 8.550, -0.950, 10.000, 2.000, 0.525]),
        ([2.500, 11.000, 8.400, -0.800, 20.000, 2.000, 0.500]),
        ([2.500, 7.000, 8.400, -0.800, 20.000, 2.000, 0.443]),
        ([4.000, 12.000, 8.550, -0.950, 20.000, 2.000, 0.506]),
        ([4.000, 8.000, 8.550, -0.950, 20.000, 2.000, 0.442]),
    ),
)
def test_Kt_impermeable_backward(Hsi, Tpi, h, Rc, B, cot_alpha, Kt_expected):

    Kt_calculated = dangremond1996.calculate_wave_transmission_Kt_impermeable(
        Hsi=Hsi,
        Tpi=Tpi,
        h=h,
        Rc=Rc,
        B=B,
        cot_alpha=cot_alpha,
    )

    assert Kt_calculated == pytest.approx(Kt_expected, abs=1e-3)
